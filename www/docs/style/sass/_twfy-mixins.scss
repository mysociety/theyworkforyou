
@import "compass/css3";
@import "settings";
@import "foundation/components/global"; // *always required
@import "foundation/components/grid-5";

$small-screen: 0;
$medium-screen: 48em;
$large-screen: 65em;
$huge-screen: 71.25em;

$colour_primary: #62b356 !default;
$colour_black: #222222;
$colour_dark_grey: #666361;
$colour_grey: #7E7B78;
$colour_mid_grey: #ccc7c3;
$colour_light_grey: #e9e7e4;
$colour_off_white : #f2f1ef;
$colour_pale_red: #EF6565;
$colour_violet: #a94ca6;

$weight_semibold: 600;
$weight_bold: 700;

@mixin unstyled-list {
    margin-left: 0;
    list-style: none outside none;
}

@mixin inline-list {
    margin-left: -0.5em;
    margin-bottom: 0;
    li {
        display: inline-block;
        margin-left: 0.5em;
    }
}

@mixin clearfix {
    &:before,
    &:after {
        content: " "; /* 1 */
        display: table; /* 2 */
    }

    &:after {
        clear: both;
    }

    /**
     * For IE 6/7 only
     * Include this rule to trigger hasLayout and contain floats.
     */
    &{
        *zoom: 1;
    }
}

.clearfix {
    @include clearfix;
}

.image-replacement {
    text-indent: -1000%;
    white-space: nowrap;
    overflow: hidden;
}

@mixin grid-layout {
    @include clearfix;
    @media (min-width: $medium-screen) {

    }
    li {
        width: 100%;
        float: left;
        @media (min-width: $medium-screen) {
            width: 33.333333333%;
        }

        @media (min-width: $large-screen) {
           width: 25%;
        }
        @media (min-width: $huge-screen) {
           width: 20%;
        }
    }
}

@mixin display-flex() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values, $values2009: 0) {
  -webkit-box-flex: $values2009;
  -moz-box-flex: $values2009;
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

@mixin flex-wrap($wrap) {
  -webkit-box-wrap: $wrap;
  -webkit-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin align-items($alignment) {
  -webkit-box-align: $alignment;
  -webkit-align-items: $alignment;
  -ms-flex-align: $alignment;
  align-items: $alignment;
}

@mixin align-self($alignment) {
  -webkit-align-self: $alignment;
  -ms-grid-column-align: $alignment;
  -ms-align-self: $alignment;
  align-self: $alignment;
}

@mixin flex-direction($direction) {
    @if ($direction == column) {
        -webkit-box-orient: vertical;
    } @elseif ($direction == row) {
        -webkit-box-orient: horizontal;
    }
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    -webkit-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin justify-content($alignment) {
    -webkit-justify-content: $alignment;
    -moz-justify-content: $alignment;
    -ms-justify-content: $alignment;
    justify-content: $alignment;
}

@mixin flex-order($order) {
  // 2009 syntax
  -webkit-box-ordinal-group: $order;
  -moz-box-ordinal-group: $order;

   // 2011 syntax https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-order
  -ms-flex-order: $order;
  flex-order: $order;

  // Modern syntax
  -webkit-order: $order;
  -ms-order: $order;
  order: $order;
}

.hide-on-small {
    display: none;
    visibility: hidden;
    @media (min-width: $medium-screen) {
        display: block;
        visibility: visible;
    }
}

.hide-on-medium {
    @media (min-width: $medium-screen) {
        display: none;
        visibility: hidden;
    }
    @media (min-width: $large-screen) {
        display: block;
        visibility: visible;
    }
}


.hide-medium-upwards {
    display: inline-block;
    visibility: visible;
    @media (min-width: $medium-screen) {
        display: none;
        visibility: hidden;
    }
}

.hide-large-upwards {
    display: inline-block;
    visibility: visible;
    @media (min-width: $large-screen) {
        display: none;
        visibility: hidden;
    }
}

.full-page__row {
    @include grid-row;
    // a top-level (un-nested) grid row, used generically to add top-level grid row
}

.full-page__unit {
    @include grid-column(12);
}

.nested-row {
  @include grid-row(nest);
  // a nested grid row, used generically to add a nested grid row
}

// A two thirds / one thirds grid that can be reused
.primary-content__unit {
  @include grid-column(12);
  @media (min-width: $medium-screen) {
    @include grid-column(9);
  }
}

.sidebar__unit {
  @include grid-column(12);
  @media (min-width: $medium-screen) {
    @include grid-column(3);
  }
}


.site-nav a.donate-button {
    background-color: darken($colour_pale_red, 10%);
    &:hover,
    &:focus {
        background-color: darken($colour_pale_red, 15%);
    };
    color: #FFF;
    font-weight: $weight_bold;
    @include border-radius(3px);
  }

.button {
    background-color: $colour_primary;
    font-weight: $weight_semibold;
    border: 0;
    @include border-radius(3px);
    &:hover,
    &:focus {
        background-color: darken($colour_primary, 10%);
    }
}

.secondary-button,
.button--secondary {
    background-color: $colour_off_white;
    border: 1px solid $colour_light_grey;
    color: $colour_dark_grey;
    &:hover,
    &:focus {
        background-color: darken($colour_off_white, 5%);
        color: $colour_black;
        border-color: darken($colour_light_grey, 10%);
    }
}

.button--negative {
  background-color: $colour_pale_red;
  &:hover,
  &:focus {
      background-color: darken($colour_pale_red, 10%);
  }
}

.button--disabled,
.button--disabled:hover {
    background-color: lighten($colour_off_white, 3%);
    border-color: lighten($colour_light_grey, 3%);
    color: lighten($colour_dark_grey, 8%);
    cursor: default;
}

.small-button,
.button--small {
    font-size: 0.875em;
    padding: 0.5em 1em 0.45em 1em;
}

.button--violet {
    background-color: $colour_violet;
    &:hover,
    &:active,
    &:focus {
      background-color: darken($colour_violet, 10%);
  }
}

.button--white {
    background-color: $colour_off_white;
    color: #333;
    &:hover,
    &:active,
    &:focus {
      color: #333;
      background-color: darken($colour_off_white, 10%);
  }
}

.button--facebook {
    background: #3b5998 url(../img/icon-facebook-f.png) 1em 50% no-repeat;
    background-size: 10px 20px;
    padding-left: 2.33em;

    @media (screen) {
        background-image: url(../img/icon-facebook-f.svg), none;
    }

    &:hover,
    &:active,
    &:focus {
        background-color: darken(#3b5998, 10%);
    }
}

.form-control,
input.form-control {
    display: inline-block;
    width: auto;
    height: auto;
    font-size: inherit;
    line-height: inherit;
    padding: 0.35em 0.4em;
    margin: 0 0 0 0;
    border: 1px solid $colour_mid_grey;
    @include border-radius(3px);
}

.reduced-heading {
    font-size: 1em;
}

.cleared {
    clear: both;
}

/* TODO  - should probably fix this stuff but it's fine for the moment */
.unstyled,
.unstyled-list {
    @include unstyled-list;
}

@mixin visuallyhidden() {
    border: 0;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
}

.visuallyhidden {
    @include visuallyhidden();
}
